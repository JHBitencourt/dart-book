{"version":3,"file":"component---src-pages-table-of-contents-js-bfc2cc1ff2174c97878c.js","mappings":"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,0BACE,yBAAG,4BAAM,oDACT,sBAAIA,KAAK,KACP,+CACA,sBAAIA,KAAK,KACP,gDAEF,4DACA,oDACA,4DACA,2DACA,kEACA,sBAAIA,KAAK,KACP,4CACA,oDACA,yCAIN,0BACE,yBAAG,4BAAM,wDACT,sBAAIA,KAAK,KACP,iDACA,8DACA,8CACA,sBAAIA,KAAK,KACP,4CACA,gEACA,0DAEF,8CACA,kDACA,sBAAIA,KAAK,KACP,0CACA,8CACA,kDACA,kDACA,iDACA,yCAIN,0BACE,yBAAG,4BAAM,0DACT,sBAAIA,KAAK,KACP,sDACA,sBAAIA,KAAK,KACP,yEACA,oEACA,8DACA,6DACA,0DAEF,6EACA,sBAAIA,KAAK,KACP,2CACA,+CACA,+CAEF,uCACA,sBAAIA,KAAK,KACP,iDACA,oDAEF,sDACA,sBAAIA,KAAK,KACP,4CACA,uDACA,+CAEF,wCACA,wCACA,sBAAIA,KAAK,KACP,yCAIN,0BACE,yBAAG,4BAAM,mEACT,sBAAIA,KAAK,KACP,sDACA,uDACA,sDACA,qDACA,sBAAIA,KAAK,KACP,oDAEF,wDACA,mCACA,sBAAIA,KAAK,KACP,iDACA,sDAEF,qDACA,sBAAIA,KAAK,KACP,8DAEF,4CACA,kFACA,wCACA,wCACA,sBAAIA,KAAK,KACP,yCAIN,0BACE,yBAAG,4BAAM,4DACT,sBAAIA,KAAK,KACP,0DACA,sBAAIA,KAAK,KACP,kDACA,gEACA,kEACA,8CACA,2DAEF,6DACA,sBAAIA,KAAK,KACP,0DACA,yDAEF,2DACA,oDACA,wCACA,0CAGJ,0BACE,yBAAG,4BAAM,iEACT,sBAAIA,KAAK,KACP,sCACA,+CACA,8CACA,sCACA,mEACA,mCACA,gDACA,iEACA,iFCxcpB,EAT4B,WAC1B,OACE,gBAAC,IAAD,CAAQC,SAAO,GACb,0CACA,gBAAC,EAAD","sources":["webpack://dart-book/./src/components/table-of-contents/table-of-contents-full.js","webpack://dart-book/./src/pages/table-of-contents.js"],"sourcesContent":["import React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport * as S from \"./styles\";\nimport * as G from \"../layout/styles\";\n\nconst TableOfContentsFull = () => {\n  const theme = useTheme();\n\n  return (\n    <G.Section>\n      <G.Boundary>\n        <G.Link href=\"/\" rel=\"noreferrer\" textColor={theme.textColor}>\n          Voltar para home\n        </G.Link>\n        <br />\n        <br />\n        <br />\n\n        <S.BoxTimeline>\n          <S.Container>\n            <G.Paragraph textAlign=\"start\">\n              <ol>\n                <li>\n                  <b><span><b>Hello, Dart!</b></span></b>\n                  <ol type=\"i\">\n                    <li>Uma breve história</li>\n                    <li>Mas por que Dart?</li>\n                    <ol type=\"a\">\n                      <li>Ecossistema</li>\n                      <li>Facilidade de aprendizado</li>\n                    </ol>\n                    <li>Executando o código</li>\n                    <ol type=\"a\">\n                      <li>Dartpad</li>\n                      <li>Utilizando IDE</li>\n                    </ol>\n                    <li>Primeiro programa</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>O básico</b></span></b>\n                  <ol type=\"i\">\n                    <li>Operadores</li>\n                    <ol type=\"a\">\n                      <li>Operadores aritméticos</li>\n                      <li>Operadores relacionais e de equalidade</li>\n                      <li>Operadores lógicos</li>\n                      <li>Operadores de manipulação de bits</li>\n                      <li>Operadores de atribuição</li>\n                      <li>Operadores de incremento e decremento</li>\n                      <li>Operadores de validação e tipos</li>\n                      <li>Operadores gerais</li>\n                      <li>Operadores de nulidade</li>\n                      <li>Precedência de operadores</li>\n                    </ol>\n                    <li>Estruturas de controle</li>\n                    <ol type=\"a\">\n                      <li>if / else</li>\n                      <li>switch / case</li>\n                      <li>while</li>\n                      <li>do while</li>\n                      <li>for</li>\n                      <li>for in</li>\n                      <li>assert</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Benditos tipos</b></span></b>\n                  <ol type=\"i\">\n                    <li>Afinal, que raios é um tipo?</li>\n                    <li>Sistemas de tipagem</li>\n                    <ol type=\"a\">\n                      <li>Coercion</li>\n                      <li>weak e strong</li>\n                    </ol>\n                    <li>E onde entra Dart?</li>\n                    <ol type=\"a\">\n                      <li>Inferência</li>\n                      <li>Static ou dynamic? O melhor de dois mundos</li>\n                    </ol>\n                    <li>Quais os tipos existentes em Dart?</li>\n                    <ol type=\"a\">\n                      <li>Os números</li>\n                      <li>Booleanos</li>\n                      <li>Symbols</li>\n                    </ol>\n                    <li>Bem-vinda, null safety!</li>\n                    <ol type=\"a\">\n                      <li>Nullable types</li>\n                      <li>Type promotion</li>\n                      <li>O operador bang!</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>Strings</li>\n                    <ol type=\"a\">\n                      <li>Interpolação de Strings</li>\n                      <li>Otimização</li>\n                      <li>Sob demanda</li>\n                      <li>Muito mais</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>Na prática - Palíndromo</li>\n                    <ol type=\"a\">\n                      <li>É com você</li>\n                    </ol>\n                    <li>Variando um pouco</li>\n                    <ol type=\"a\">\n                      <li>E o tal do static?</li>\n                      <li>final x const</li>\n                      <li>late</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"i\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Explorando mais as funções e a Web</b></span></b>\n                  <ol type=\"i\">\n                    <li>Funções! Métodos! Closures?</li>\n                    <ol type=\"a\">\n                      <li>Funções como objetos</li>\n                      <li>Retorno de funções e o void</li>\n                      <li>O novato: Never</li>\n                      <li>Escopo, ao infinito e além</li>\n                      <li>Aproveitando o tear-off</li>\n                    </ol>\n                    <li>Na prática - Dart web</li>\n                    <ol type=\"a\">\n                      <li>Criando o projeto</li>\n                      <li>Dart e a web</li>\n                      <li>Iniciando o jogo e métodos</li>\n                    </ol>\n                    <li>Parâmetros</li>\n                    <ol type=\"a\">\n                      <li>Posicional e obrigatório</li>\n                      <li>Posicional e opcional</li>\n                      <li>Nomeado e opcional</li>\n                      <li>Nomeado e obrigatório</li>\n                      <li>Declarando as regras do jogo</li>\n                      <li>Manipulando o DOM do jogo</li>\n                    </ol>\n                    <li>Enums</li>\n                    <ol type=\"a\">\n                      <li>Definindo o vencedor da partida</li>\n                    </ol>\n                    <li>Typedef</li>\n                    <li>Adicionando interação ao jogo</li>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Cuidando dos erros</b></span></b>\n                  <ol type=\"i\">\n                    <li>Error versus Exception</li>\n                    <li>Lançando exceções</li>\n                    <ol type=\"a\">\n                      <li>Suas próprias exceptions</li>\n                    </ol>\n                    <li>Seus próprios errors? Lance um existente ou use um assert!</li>\n                    <ol type=\"a\">\n                      <li>Utilizando assert</li>\n                    </ol>\n                    <li>Capturando exceções</li>\n                    <ol type=\"a\">\n                      <li>Especifiando o tipo com on</li>\n                      <li>Garantindo execução com finally</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Entendendo as libraries</b></span></b>\n                  <ol type=\"i\">\n                    <li>Criando uma library</li>\n                    <li>Utilizando outras libraries</li>\n                    <ol type=\"a\">\n                      <li>Criando um alias</li>\n                      <li>Personalizando os recursos importados</li>\n                    </ol>\n                    <li>Privacidade em libraries</li>\n                    <li>Separando libraries em arquivos</li>\n                    <ol type=\"a\">\n                      <li>Devo separar todas as libraries em arquivos?</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Na prática - Packages</b></span></b>\n                  <ol type=\"i\">\n                    <li>Os packages</li>\n                    <li>Criando o package de logger</li>\n                    <ol type=\"a\">\n                      <li>Modificando o pubspec.yaml</li>\n                      <li>Organizando os arquivos existentes</li>\n                    </ol>\n                    <li>Exportando libraries</li>\n                    <ol type=\"a\">\n                      <li>Testando o package</li>\n                    </ol>\n                    <li>Adicionando linter para o código</li>\n                    <ol type=\"a\">\n                      <li>Utilizando regras de packages</li>\n                    </ol>\n                    <li>Import dinâmico de libraries</li>\n                    <ol type=\"a\">\n                      <li>Testando o package na web</li>\n                    </ol>\n                    <li>Documentando libraries</li>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Oriente seus objetos</b></span></b>\n                  <ol type=\"i\">\n                    <li>Classes e objetos</li>\n                    <li>Sobrescrita de operadores</li>\n                    <li>Construtores</li>\n                    <ol type=\"a\">\n                      <li>Construtores padrão</li>\n                      <li>Construtores nomeados</li>\n                      <li>Construtores constantes</li>\n                      <li>Construtores factory</li>\n                    </ol>\n                    <li>Relacionamento entre objetos</li>\n                    <ol type=\"a\">\n                      <li>Herança</li>\n                      <li>Polimorfismo</li>\n                      <li>Classes abstratas</li>\n                      <li>Interfaces</li>\n                      <li>Mixins</li>\n                      <li>Mixins a fundo</li>\n                      <li>Afinal, devo usar herança, interface ou mixin?</li>\n                    </ol>\n                    <li>As incríveis Extensions</li>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Generics&lt;T&gt; e as estruturas de dados</b></span></b>\n                  <ol type=\"i\">\n                    <li>O que é esse tal de generics?</li>\n                    <ol type=\"a\">\n                      <li>Restringindo um tipo</li>\n                      <li>Métodos genéricos</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>Estruturas de dados</li>\n                    <ol type=\"a\">\n                      <li>List</li>\n                    </ol>\n                    <li>A interface Iterable</li>\n                    <ol type=\"a\">\n                      <li>Set</li>\n                    </ol>\n                    <li>A interface Comparable</li>\n                    <ol type=\"a\">\n                      <li>Queue</li>\n                      <li>Map</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Concorrência</b></span></b>\n                  <ol type=\"i\">\n                    <li>Isolates</li>\n                    <li>Event Loop</li>\n                    <li>Síncrono versus assíncrono</li>\n                    <li>Futures</li>\n                    <ol type=\"a\">\n                      <li>Future encadeado</li>\n                      <li>Erros em uma cadeia assíncrona</li>\n                      <li>Future.sync</li>\n                      <li>Future.microtask</li>\n                      <li>Future.value</li>\n                      <li>Future.error</li>\n                      <li>Future.wait</li>\n                      <li>Future/any</li>\n                    </ol>\n                    <li>Async e await</li>\n                    <ol type=\"a\">\n                      <li>Um jeito síncrono de trabalhar com assíncrono?</li>\n                      <li>Tratando erros com async await</li>\n                      <li></li>\n                    </ol>\n                    <li>Completer</li>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Na prática - Dart CLI</b></span></b>\n                  <ol type=\"i\">\n                    <li>API da Climatempo</li>\n                    <ol type=\"a\">\n                      <li>Criando o projeto</li>\n                    </ol>\n                    <li>Requisições com o package http</li>\n                    <li>Package convert e JSON</li>\n                    <li>Consumindo a API do Climatempo</li>\n                    <li>Tratando os argumentos de CLI</li>\n                    <li>Rodando um app CLI de qualquer lugar</li>\n                    <ol type=\"a\">\n                      <li>Compilando AOT</li>\n                      <li>Binários independentes</li>\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Stream é tão funcional...</b></span></b>\n                  <ol type=\"i\">\n                    <li>O que é uma Stream?</li>\n                    <li>Inscrição única versus broadcast</li>\n                    <li>StreamController</li>\n                    <ol type=\"i\">\n                      <li>Interface Sink</li>\n                      <li>StreamController versus StreamSink</li>\n                      <li>Estados do StreamController</li>\n                    </ol>\n                    <li>Stream e o await</li>\n                    <li>Operações em Streams</li>\n                    <ol type=\"i\">\n                      <li>Propriedades</li>\n                      <li>Métodos de busca</li>\n                      <li>Métodos de validação</li>\n                      <li>Métodos de validação</li>\n                      <li>Métodos utilitários</li>\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Um pouco mais sobre Streams</b></span></b>\n                  <ol type=\"i\">\n                    <li>Transformando uma Stream</li>\n                    <ol type=\"a\">\n                      <li>Implementando a interface StreamTransformer</li>\n                      <li>Construtor padrão do StreamTransformer</li>\n                      <li>Estendendo StreamTransformerBase</li>\n                      <li>Construtor nomeado fromHandlers</li>\n                      <li>Construtor nomeado fromBind</li>\n                    </ol>\n                    <li>Inscrição única versus broadcast, um pouco além</li>\n                    <ol type=\"i\">\n                      <li>Ciclo de vida</li>\n                      <li>Facilidade de uso</li>\n                      <li>Perda de eventos</li>\n                    </ol>\n                    <li>Geradores</li>\n                    <ol type=\"i\">\n                      <li>Geradores síncronos</li>\n                      <li>Geradores assíncronos</li>\n                    </ol>\n                    <li>Na prática - Server HTTP</li>\n                    <ol type=\"i\">\n                      <li>Server em Dart</li>\n                      <li>Funcionalidade de alertas</li>\n                      <li>Criando o Client</li>\n                    </ol>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Um pouco mais sobre Isolares e Zones</b></span></b>\n                  <ol type=\"i\">\n                    <li>Criando uam nova Isolate</li>\n                    <li>Comunicação unidirecional</li>\n                    <li>Comunicação bidirecional</li>\n                    <li>Controlando uma Isolate</li>\n                    <ol type=\"a\">\n                      <li>Cadastrando listeners</li>\n                    </ol>\n                    <li>Isolate através de uma URI</li>\n                    <li>Zones</li>\n                    <ol type=\"a\">\n                      <li>Hierarquia de zones</li>\n                      <li>Por que criar uma zone?</li>\n                    </ol>\n                    <li>Uma zone livre de erros</li>\n                    <ol type=\"a\">\n                      <li>Propagação de erros entre zones</li>\n                    </ol>\n                    <li>Valores locais</li>\n                    <li>Sobrescrevendo funcionalidades com ZoneSpecification</li>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                    <ol type=\"a\">\n                      <li>Até aqui</li>\n                    </ol>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Na prática - Gerando arquivos</b></span></b>\n                  <ol type=\"i\">\n                    <li>Manipulando arquivos em Dart</li>\n                    <ol type=\"a\">\n                      <li>Criando um diretório</li>\n                      <li>Criando e escrevendo em um arquivo</li>\n                      <li>Escrevendo em um arquivo sob demanda</li>\n                      <li>Lendo um arquivo</li>\n                      <li>Lendo um arquivo sob demanda</li>\n                    </ol>\n                    <li>Climatempo - Salvando consultas</li>\n                    <ol type=\"a\">\n                      <li>Criando o arquivo de cidades</li>\n                      <li>Criando o arquivo de clima</li>\n                    </ol>\n                    <li>Arquivo em isolates separadas</li>\n                    <li>Log de erros com zones</li>\n                    <li>Se liga aí</li>\n                    <li>É com você</li>\n                  </ol>\n                </li>\n                <li>\n                  <b><span><b>Até mais, e obrigado pelos peixes!</b></span></b>\n                  <ol type=\"i\">\n                    <li>Metadata</li>\n                    <li>Geração de código</li>\n                    <li>Testes unitários</li>\n                    <li>DevTools</li>\n                    <li>Interface para funções externas - FFI</li>\n                    <li>Shelf</li>\n                    <li>Explore o Flutter!</li>\n                    <li>Contribua para projetos Open Source</li>\n                    <li>Aprenda uma outra linguagem de programação</li>\n                  </ol>\n                </li>\n              </ol>\n            </G.Paragraph>\n          </S.Container>\n        </S.BoxTimeline>\n      </G.Boundary>\n    </G.Section>\n  );\n};\n\nexport default TableOfContentsFull;\n","import * as React from \"react\";\nimport Layout from \"../components/layout/layout\";\nimport TableOfContentsFull from \"../components/table-of-contents/table-of-contents-full\";\n\nconst TableOfContentsPage = () => {\n  return (\n    <Layout primary>\n      <title>Dart book</title>\n      <TableOfContentsFull />\n    </Layout>\n  );\n};\n\nexport default TableOfContentsPage;\n"],"names":["theme","useTheme","href","rel","textColor","textAlign","type","primary"],"sourceRoot":""}